#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Show Header" name="show-header" type="boolean" default="true">
Defines the rendition of the header on the top.
Allowed values are: true (default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Show Attributes Name" name="show-attribute-name" type="boolean" default="false">
Defines the rendition of the attributes names.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter label="Show Bullet" name="show-bullet" type="boolean" default="false">
Defines the rendition of a bullet next to each line.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Alternate Rows" name="use-alternate" type="boolean" default="false">
Defines the usage of alternates colours for each line.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter label="Links Position" name="link-position" type="enum" values="left|right|on_bullet|on_row" default="right">
Defines the rendition of the sub levels links.
Allowed values are:
- right (default): places the links on the right
- left: places the links on the left
- on_bullet: places the first link on the bullet
- on_row: places the first link on the attributes
</wr:LayoutParameter>
<wr:LayoutParameter label="Scrolling Position" name="scrolling-position" type="enum" values="top|bottom|both" default="top">
Defines where to position the scroll links.
Allowed values are:
- top (default): places the links at the top
- bottom: places the links at the bottom
- both: places the links at the top and bottom
</wr:LayoutParameter>
<wr:LayoutParameter label="Buttons Position" name="button-position" type="enum" values="top|bottom|both" default="bottom">
Defines where to position the buttons to render submit links.
Allowed values are:
- top: places the buttons at the top
- bottom (default): places the buttons at the bottom
- both: places the buttons at the top and bottom
</wr:LayoutParameter>
<wr:LayoutParameter label="Show Jump Links" name="show-jump-links" type="boolean" default="true">
Defines whether to show the jumps links of the scroller or not.
Allowed values are: true(default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Select All" name="select-all" type="boolean" values="true|false" default="false">
Defines the rendition of a link that allows
to select or deselect all the checkboxes of
the unit.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Empty Unit Message" name="use-empty-unit-message" type="boolean" default="false">
Defines the usage of a message for empty units.
Allowed values are: true(default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Empty Unit Message" name="empty-unit-message" type="string" default="emptyUnitMessage">
Defines the key of the message to use if the unit is empty.
Default value: emptyUnitMessage
</wr:LayoutParameter>
<wr:LayoutParameter name="select-row" label="Select row?" type="boolean" default="false">
  Defines if the row must be selected on mouse click.
</wr:LayoutParameter>
<wr:LayoutParameter name="color-selected-row" label="Choose the color" type="color" default="#FFFFBB">
  Defines the color of the selected row
</wr:LayoutParameter>
<wr:LayoutParameter name="text-align" label="Select the text alignment" type="enum" values="default|left|center|right" default="default">
  Defines the text alignment
</wr:LayoutParameter>

[%
import org.apache.commons.lang.StringUtils
import org.apache.commons.lang.math.NumberUtils

setHTMLOutput()

def unitId = unit["id"]
def blockFactor = unit["blockFactor"]
def isSortable = unit["sortable"]
def isScrollable = blockFactor != "" ? "true": "false"

def links = unit.selectNodes("layout:Link").findAll{it["_exp"]!='t'}
def unitLink = links.empty ? null : links[0]
def unitLinkIsAjax = unitLink != null ? (unitLink["ajaxEnabled"] == "true" && isAjaxPage(page)) : false
def link = unitLink?.valueOf("@link")
def myIndex = unit.hashCode()

def showHeader = params["show-header"]
def showAttributeName = params["show-attribute-name"]
def useAlternate = params["use-alternate"]
def showBullet = params["show-bullet"]
def linkPosition = params["link-position"]
def buttonPosition = params["button-position"]
def showJumpLinks = params["show-jump-links"]
def scrollingPosition = params["scrolling-position"]
def selectAll = params["select-all"]
def useEmptyUnitMessage = params["use-empty-unit-message"]
def emptyUnitMessage = params["empty-unit-message"]
def selectRow = params["select-row"] == "true"
def colorSelectedRow = params["color-selected-row"]
def textAlign = (params["text-align"] == "default") ? "" : StringUtils.substring(params["text-align"], 0, 1)

def firstLink = unit.selectSingleNode("layout:Link[contains(@link,'First')]")
def previousLink = unit.selectSingleNode("layout:Link[contains(@link,'Previous')]")
def blockLink = unit.selectSingleNode("layout:Link[contains(@link,'Block')]")
def nextLink = unit.selectSingleNode("layout:Link[contains(@link,'Next')]")
def lastLink = unit.selectSingleNode("layout:Link[contains(@link,'Last')]")
def isAutoExpandAjax = isAjaxPage(page)
def checkable = "true" == unit["checkable"] && "true" != unit["distinct"]

//returns true if the given link must be rendered as a form button
def isButton(link){
  def navLink = getById(link["link"])
  if(navLink == null){
    return false
  }
  def linkParams = navLink.selectNodes("LinkParameter").collect{it["source"]}
  if(linkParams.isEmpty()){
    linkParams = getAutomaticLinkParameters(navLink).collect{it["source"]}
  }
  for(param in linkParams){
    if(param?.endsWith("Checked")){
      return true;
    }
  }
  return false
}

def buttonsCount = unit.selectNodes("layout:Link").findAll{ isButton(it) }.size();
%]

[% 
def getIconPath(linkLayout) {
	folder = linkLayout.parameters["icon-folder"]
	name = StringUtils.defaultIfEmpty(linkLayout.parameters["icon-name"], linkLayout.contextElement?.attributeValue("name"))
	extension = linkLayout.parameters["icon-extension"]
	return getFilePath(folder, name, extension)
}

def getInfoLevel( attr ) {
	def infoLevel = attr.selectSingleNode("Property[@name='informationLevel']/@value")?.getStringValue();
	
	def level = ""
	switch( infoLevel ) {
	 case "high":
	 	level = "data-information-level=high" 
	 	break;
	 case "medium":
	 	level = "data-information-level=medium" 
	 	break;
	 case "low":
	 	level = "data-information-level=low" 
	 	break;
	}
	
  	return level;
}

%]

[% if (useEmptyUnitMessage != "true") { %]
<c:if test="${not(empty <wr:Id context="unit" />) and (<wr:Id context="unit" />.dataSize gt 0)}">
[% } else { %]
<c:choose>
<c:when test="${not(empty <wr:Id context="unit" />) and (<wr:Id context="unit" />.dataSize gt 0)}">
[% } %]
	<wr:Frame>
		<div class="plain <wr:StyleClass/>">
			<div class="plain PowerIndexUnit">
				[% if (checkable) { %]
					<c:set var="errorMsg"><html:errors property="<wr:Id context="unit" />Checked" /></c:set>
					
					<c:if test="${not empty errorMsg}">
						<div class="alert warning" data-sticky="true">
						   <html:errors property="<wr:Id context="unit" />Checked" />
						</div>
					</c:if>
					[% if (buttonPosition == "top" || buttonPosition == "both") { %]
						<div>
							<wr:Iterate var="l" context="unit" select="layout:Link">
								[% if (isButton(l)) { %]
									<wr:Visible>
										<wr:Link class="button" type="button" context="l"/>
									</wr:Visible>	
								[% } %]
							</wr:Iterate>
						</div>
						<div class="clear">&nbsp;</div>
					[% } %]
				[% } %]
				
				[% if (isScrollable == "true" && (scrollingPosition == "top" || scrollingPosition == "both")) { %]
					<c:if test="${<wr:Id context="unit" />.scroller.of gt [%= blockFactor %]}">
						<div class="pagination on_top r">
							[% if (firstLink) { %]
								<c:choose>
						            <c:when test="${<wr:Id context="unit" />.scroller.current ne <wr:Id context="unit" />.scroller.first}">
					     	            <wr:Link class="btn small" context="firstLink"/>
						            </c:when>
						            <c:otherwise>
					     	            <span class="button small disabled"><wr:Label context="firstLink"/></span>
						           	</c:otherwise>
						        </c:choose>
							[% } %]
							[% if (previousLink) { %]
								<c:choose>
						            <c:when test="${<wr:Id context="unit" />.scroller.current ne <wr:Id context="unit" />.scroller.previous}">
					     	            <wr:Link class="btn small" context="previousLink"/>
						            </c:when>
						            <c:otherwise>
						            	<span class="button small disabled"><wr:Label context="previousLink"/></span>
						           	</c:otherwise>
						        </c:choose>
							[% } %]
							
							
							[% if (blockLink && showJumpLinks == "true") {%]
								<span>
								<c:forEach var="current" varStatus="status" items="${<wr:Id context="unit" />.scroller.blocks}">
									<c:set var="index" value="${status.index}"/>
									<c:choose>
										<c:when test="${current ne <wr:Id context="unit" />.scroller.current}">
											<a class="btn small <wr:StyleClass context="blockLink"/>" href="<wr:URL context="blockLink"/>"  onclick="<wr:AjaxURL context="blockLink" />">${current}</a>
										</c:when>
										<c:otherwise>
											<span class="button small active <wr:StyleClass context="blockLink"/>">${current}</span>
										</c:otherwise>
									</c:choose>
						    	</c:forEach> 
								</span>
						    [% } %]
							
							    
							[% if (nextLink) { %]
								<c:choose>
						            <c:when test="${<wr:Id context="unit" />.scroller.current ne <wr:Id context="unit" />.scroller.next}">
					     	            <wr:Link class="btn small" context="nextLink"/>
						            </c:when>
						            <c:otherwise>
					     	            <span class="button small disabled"><wr:Label context="nextLink"/></span>
						           	</c:otherwise>
						        </c:choose>
							[% } %]
							[% if (lastLink) { %]
								<c:choose>
						            <c:when test="${<wr:Id context="unit" />.scroller.current ne <wr:Id context="unit" />.scroller.last}">
					     	            <wr:Link class="btn small" context="lastLink"/>
						            </c:when>
						            <c:otherwise>
					     	            <span class="button small disabled"><wr:Label context="lastLink"/></span>
						           	</c:otherwise>
						        </c:choose>
							[% } %]
						</div>
					</c:if>
				[% } %]
				<table class="enhanced">
					[% if (showHeader == "true") {%]
						<!-- begin header -->
						<thead>
						<tr>
						[% if (checkable) {%]
							 [% if (selectAll == "true") {%]
								<th class="<wr:StyleClass/> checkbox">
									<script>multiChoiceMap["<wr:Id context="unit"/>_[%= myIndex%]"] = "all";</script>
									<input type="checkbox" onclick="checkall('<wr:Id context="unit" />', '[%= myIndex%]', 'Checked')">
								</th>
							[% } else {%]
								<th class="<wr:StyleClass/>"></th>
							[% } %]
						[%}%]
						[% if (showBullet == "true") {%]
							<th class="<wr:StyleClass/>"></th>
						[% } %]
						[% if (linkPosition == "left") { %]
							<wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
								[% if (!isButton(l)) { %]
									<wr:Visible><th class="<wr:StyleClass/> link-h"></th></wr:Visible>
								[% } %]
							</wr:Iterate>
						[% }  %]
						<wr:Iterate var="att" context="unit" select="layout:Attribute">
							<wr:Visible>
       					    [% if (showAttributeName == "true") {%]
								<th class="<wr:StyleClass/>" [%= getInfoLevel(att) %]></th>
							[% } %]
							<th class="<wr:StyleClass/>" [%= getInfoLevel(att) %]>
					        [% if (isSortable == "true") { %]
					         [% def sortLink = unit.selectSingleNode("layout:Link[@link='" + unit["id"] + att["attribute"] + "']")
						         if (sortLink != null) { %]
						            	<wr:Link context="sortLink" type="sort"/>
						         [% } else { %]
						            	<wr:Label/>
						         [% } %]
						     [% } else { %]
						     		<wr:Label/>
						     [% } %]
					        </th>
	                        </wr:Visible>
					    </wr:Iterate>
					    
						<wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
							[% if (!isButton(l) && (linkPosition == "right" || ((linkPosition == "on_row" || linkPosition == "on_bullet") && index > 0))) { %]
								<wr:Visible><th class="<wr:StyleClass/> link-h"></th></wr:Visible>
							[% } %]
						</wr:Iterate>	
						</tr>
						<!-- end header -->
					[% } %]
				</thead>
				<tbody>
				<!-- instances -->
				<c:forEach var="current" varStatus="status" items="${<wr:Id context="unit" />.data}">
					<c:set var="index" value="${status.index}"/>	
						<tr class="row<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]" [% if(selectRow){ %]onClick="HighLightTR(this,'[%= colorSelectedRow %]');"[% } %]>	
						[% if (checkable) {%]
							[% if ((linkPosition == "on_row") && (!links.empty)) {%]
							   <td class="checkbox <wr:StyleClass context="unitLink"/> value<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]">
							[% } else {%]
							   <td class="checkbox <wr:StyleClass/> value<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]">				
							[% } %]
							  <html:multibox styleId="<wr:Id context="unit" />_[%= myIndex%]_${index}" property="<wr:Id context="unit" />Checked" styleClass="checkBox"><c:out value="${<wr:Id context="unit" />.key[index]}"/></html:multibox>
							</td>
						[%}%]
						
						[% if (showBullet == "true") {
						 if ((linkPosition == "on_bullet" || linkPosition == "on_row") && !links.empty) { %]
						        <td class="<wr:StyleClass context="unitLink"/> value<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]">
						        	<wr:Visible context="unitLink" position="'index'">
						        		<wr:Link type="button" class="button small i_triangle_right nt" context="unitLink" position="'index'"/>
									</wr:Visible>
							    </td>
						  [% } else { %]
								<td class="<wr:StyleClass/> value<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]">
									<span class="bullet i_triangle_right">&nbsp;</span>
								</td>
						  [% } 
					    } %]
								
							[% if (linkPosition == "left") { %]
								<wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
									[% if (!isButton(l)) { %]
										<wr:Visible>
										[% if ((linkPosition == "on_row") && (!links.empty)) {%]
										   <td class="<wr:StyleClass context="unitLink"/> link link<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]">
										[% } else {%]
										   <td class="<wr:StyleClass/> link value<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]">				
										[% } %]
								   			<c:choose>
								   				<c:when test="${<wr:Id context="unit" />.currentIndex eq index}">
								   					[% if (useAlternate == "true") { %]
								   						<c:choose>
								   							<c:when test="${index mod 2 eq 0}">
																<wr:Link class="linkCurrentAlternate"/>
															</c:when>
															<c:otherwise>
																<wr:Link class="linkCurrent"/>
															</c:otherwise>
								   						</c:choose>
													[% } else { %]
														<wr:Link class="linkCurrent"/>								
													[% } %]
								   				</c:when>
								   				<c:otherwise>
								   					[% if (useAlternate == "true") { %]
								   						<c:choose>
								   							<c:when test="${index mod 2 eq 0}">
																<wr:Link class="linkAlternate"/>
															</c:when>
															<c:otherwise>
																<wr:Link class="link"/>
															</c:otherwise>
								   						</c:choose>
													[% } else { %]
														<wr:Link class="link"/>								
													[% } %]
								   				</c:otherwise>
								   			</c:choose>
										</td>
								    	</wr:Visible>
							    	[% } %]
								</wr:Iterate>
							[% } %]
							
							<wr:Iterate var="attr" context="unit" select="layout:Attribute">
								<wr:Visible>
								[% if (showAttributeName == "true") {%]
									<td [%= getInfoLevel(attr) %] class="<wr:StyleClass/> header<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]">
								    	<wr:Label/>
								   </td>
								[% } %]
								[% if ((linkPosition == "on_row") && (!links.empty)) {%]
								   <td [%= getInfoLevel(attr) %] class="<wr:StyleClass context="unitLink"/> value<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %] [%= attr["type"]%] [%= textAlign %]">
									<wr:Visible position="'index'">
										<wr:Visible context="unitLink" position="'index'">
											<a href="<wr:URL context="unitLink"/>" class="<wr:StyleClass context="unitLink"/> link<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]" onclick="<wr:AjaxURL context="unitLink" />" [%if (unitLink?.attributeValue("newWindow") == "true") { %] target="_blank" [% } %]>
										</wr:Visible>
										<wr:Value/>
										<wr:Visible context="unitLink" position="'index'">
											</a>
										</wr:Visible>
									</wr:Visible>
								   </td>
								[% } else {%]
								   <td [%= getInfoLevel(attr) %] class="<wr:StyleClass/> value<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %] [%= attr["type"]%] [%= textAlign %]">				
										<wr:Value />
								   </td>
								[% } %]
								</wr:Visible>
							</wr:Iterate>
							
						   <wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
							[% if (!isButton(l)) { %]
						      <wr:Visible >
						   		[% if ((linkPosition == "on_row" || linkPosition == "on_bullet") && index > 0) { %]
									<td class="<wr:StyleClass context="unitLink"/> link link<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]">
							   			<c:choose>
							   				<c:when test="${<wr:Id context="unit" />.currentIndex eq index}">
							   					[% if (useAlternate == "true") { %]
							   						<c:choose>
							   							<c:when test="${index mod 2 eq 0}">
															<wr:Link class="linkCurrentAlternate"/>
														</c:when>
														<c:otherwise>
															<wr:Link class="linkCurrent"/>
														</c:otherwise>
							   						</c:choose>
												[% } else { %]
													<wr:Link class="linkCurrent"/>								
												[% } %]
							   				</c:when>
							   				<c:otherwise>
							   					[% if (useAlternate == "true") { %]
							   						<c:choose>
							   							<c:when test="${index mod 2 eq 0}">
															<wr:Link class="linkAlternate"/>
														</c:when>
														<c:otherwise>
															<wr:Link class="link"/>
														</c:otherwise>
							   						</c:choose>
												[% } else { %]
													<wr:Link class="link"/>								
												[% } %]
							   				</c:otherwise>
							   			</c:choose>
						   			</td>
							    [% } else if (linkPosition != "on_row" && linkPosition != "on_bullet" && linkPosition != "left") {%]
									<td class="<wr:StyleClass/> link value<c:if test="${<wr:Id context="unit" />.currentIndex eq index}">Current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}">Alternate</c:if>[% } %]">
										<c:choose>
							   				<c:when test="${<wr:Id context="unit" />.currentIndex eq index}">
							   					[% if (useAlternate == "true") { %]
							   						<c:choose>
							   							<c:when test="${index mod 2 eq 0}">
															<wr:Link class="linkCurrentAlternate"/>
														</c:when>
														<c:otherwise>
															<wr:Link class="linkCurrent"/>
														</c:otherwise>
							   						</c:choose>
												[% } else { %]
													<wr:Link class="linkCurrent"/>								
												[% } %]
							   				</c:when>
							   				<c:otherwise>
							   					[% if (useAlternate == "true") { %]
							   						<c:choose>
							   							<c:when test="${index mod 2 eq 0}">
															<wr:Link class="linkAlternate"/>
														</c:when>
														<c:otherwise>
															<wr:Link class="link"/>
														</c:otherwise>
							   						</c:choose>
												[% } else { %]
													<wr:Link class="link"/>								
												[% } %]
							   				</c:otherwise>
							   			</c:choose>
						   			</td>
								[% } %]
						      </wr:Visible>
							[% } %]
						   </wr:Iterate>
						</tr>
					</c:forEach>
				</tbody>
				</table>
				
				
				[% if (isScrollable == "true" && (scrollingPosition == "bottom" || scrollingPosition == "both")) { %]
					<c:if test="${<wr:Id context="unit" />.scroller.of gt [%= blockFactor %]}">
						<div class="pagination r">
							[% if (firstLink) { %]
								<c:choose>
						            <c:when test="${<wr:Id context="unit" />.scroller.current ne <wr:Id context="unit" />.scroller.first}">
					     	            <wr:Link class="btn small" context="firstLink"/>
						            </c:when>
						            <c:otherwise>
					     	            <span class="button small disabled"><wr:Label context="firstLink"/></span>
						           	</c:otherwise>
						        </c:choose>
							[% } %]
							[% if (previousLink) { %]
								<c:choose>
						            <c:when test="${<wr:Id context="unit" />.scroller.current ne <wr:Id context="unit" />.scroller.previous}">
					     	            <wr:Link class="btn small" context="previousLink"/>
						            </c:when>
						            <c:otherwise>
						            	<span class="button small disabled"><wr:Label context="previousLink"/></span>
						           	</c:otherwise>
						        </c:choose>
							[% } %]
							
							
							[% if (blockLink && showJumpLinks == "true") {%]
								<span>
								<c:forEach var="current" varStatus="status" items="${<wr:Id context="unit" />.scroller.blocks}">
									<c:set var="index" value="${status.index}"/>
										<c:choose>
											<c:when test="${current ne <wr:Id context="unit" />.scroller.current}">
												<a class="btn small <wr:StyleClass context="blockLink"/>" href="<wr:URL context="blockLink"/>"  onclick="<wr:AjaxURL context="blockLink" />">${current}</a>
											</c:when>
											<c:otherwise>
												<span class="button small active <wr:StyleClass context="blockLink"/>">${current}</span>
											</c:otherwise>
										</c:choose>
						    	</c:forEach> 
								</span>
						    [% } %]
							
							    
							[% if (nextLink) { %]
								<c:choose>
						            <c:when test="${<wr:Id context="unit" />.scroller.current ne <wr:Id context="unit" />.scroller.next}">
					     	            <wr:Link class="btn small" context="nextLink"/>
						            </c:when>
						            <c:otherwise>
					     	            <span class="button small disabled"><wr:Label context="nextLink"/></span>
						           	</c:otherwise>
						        </c:choose>
							[% } %]
							[% if (lastLink) { %]
								<c:choose>
						            <c:when test="${<wr:Id context="unit" />.scroller.current ne <wr:Id context="unit" />.scroller.last}">
					     	            <wr:Link class="btn small" context="lastLink"/>
						            </c:when>
						            <c:otherwise>
					     	            <span class="button small disabled"><wr:Label context="lastLink"/></span>
						           	</c:otherwise>
						        </c:choose>
							[% } %]
						</div>
					</c:if>
				[% } %]
				
				[% if (checkable && (buttonPosition == "bottom" || buttonPosition == "both")) { %]
					<div>
						<wr:Iterate var="l" context="unit" select="layout:Link">
							[% if (isButton(l)) { %]
								<wr:Visible>
									<wr:Link class="button" type="button" context="l"/>
								</wr:Visible>	
							[% } %]
						</wr:Iterate>
					</div>
				[% } %]
				<div class="clear"></div>
			</div>
		</div>
	</wr:Frame>
[% if (useEmptyUnitMessage != "true") { %]
</c:if>
[% } else { %]
</c:when>
<c:otherwise>
	<wr:Frame>
		<div class="plain <wr:StyleClass/>">
			<div class="alert info" data-sticky="true">
				   <bean:message key="[%printJSPTagValue(emptyUnitMessage)%]"/>
			</div>
		</div>
	</wr:Frame>	
</c:otherwise>
</c:choose>
[% } %]
[% if(selectRow){ %]
<script>
	var preEl ;
	var orgBColor;
	function HighLightTR(el, backColor){
	  if(typeof(preEl)!='undefined') {
	     preEl.style.background=orgBColor;
	  }
	  orgBColor = el.bgColor;
	  el.style.background=backColor;

	  preEl = el;
	}
</script>
[% } %]
#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Show Attributes Name" name="show-attribute-name" type="boolean" default="false">
Defines the rendition of the attributes names.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter name="item-width" label="Item Width" type="string" default="25%">
Define the width of a masonry item.
Default value: 25%
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Empty Unit Message" name="use-empty-unit-message" type="boolean" default="false">
Defines the usage of a message for empty units.
Allowed values are: true(default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Empty Unit Message" name="empty-unit-message" type="string" default="emptyUnitMessage">
Defines the key of the message to use if the unit is empty.
Default value: emptyUnitMessage
</wr:LayoutParameter>
[%
import org.apache.commons.lang.math.NumberUtils
import org.apache.commons.lang.StringUtils

setHTMLOutput()
def unitId = unit["id"]
def hash = unit.hashCode()

def showAttributeName = params["show-attribute-name"]
def useEmptyUnitMessage = params["use-empty-unit-message"]
def emptyUnitMessage = params["empty-unit-message"]

def atts = unit.selectNodes("layout:Attribute")
def bullet = "images/shadow_left.jpg"
def links = unit.selectNodes("layout:Link")
def hasBlobAttr = !unit.selectNodes("layout:Attribute[@type=\"blob\"][fn:starts-with(@contentType, \"image\")]").isEmpty()
%]
[% if (hasBlobAttr) {%]
<wr:RequireResource ref="imagesloaded-js"/>
[% } %]
<wr:RequireResource ref="masonry-js"/>
[% if (useEmptyUnitMessage != "true") { %]
<c:if test="${not(empty <wr:Id context="unit"/>) and (<wr:Id context="unit"/>.dataSize gt 0)}">
[% } else { %]
<c:choose>
<c:when test="${not(empty <wr:Id context="unit"/>) and (<wr:Id context="unit"/>.dataSize gt 0)}">
[% } %]
	<wr:Frame>
		<div class="<wr:StyleClass/>">
			<div class="MultiDataUnit">
				<div id="MasonryContainer-[%= hash %]" class="MasonryContainer">
		            <c:forEach var="current" varStatus="status" items="${<wr:Id context="unit"/>.data}">
		              <c:set var="index" value="${status.index}"/>
		              <div class="MasonryItem" style="width: [%= params["item-width"] %];">
		              	<table>
			                <wr:Iterate var="attr" context="unit" select="layout:Attribute"> 
			                  <wr:Visible position="'index'">
			                  <tr>
                                [% if (showAttributeName == "true") {%]
			                    <th class="<wr:StyleClass/> header"><wr:Label/></th>
			                    [% } %]
							    <td class="<wr:StyleClass/> value [%= attr["type"]%]"><wr:Value/></td>
							  </tr>
			                  </wr:Visible>
			                </wr:Iterate>
		              	</table>
		              </div>
		            </c:forEach>
			      [% if (!links.empty) {%]
		            <table>
			            <tr>
			                <wr:Iterate var="link" context="unit" select="layout:Link">
			                  <wr:Visible>
			                    <td><wr:Link class="link"/></td>
			                  </wr:Visible>
			                </wr:Iterate>
			            </tr>
		            </table>
			     [% } %]
		   	   </div>
		   	   <script>
		   	   	(function() {
			   	   	var container = document.querySelector('#MasonryContainer-[%= hash %]');
			   	   	
			   	   	function setWidth(container) {
			   	   		if (container.parentNode.offsetWidth + 'px' !== container.style.width) {
			   	   			container.style.width = container.parentNode.offsetWidth + 'px';
			   	   		}
			   	   	}
			   	   	$(window).resize(function() {setWidth(container)}); 
					setWidth(container);
				[% if (hasBlobAttr) { %]imagesLoaded( container, function() { [% } %]
					new Masonry( container , {
						"itemSelector": ".MasonryItem",
						"columnWidth": ".MasonryItem"
					});
				 [% if (hasBlobAttr) { %]});[% } %]
				 })();
		   	   </script>
		   	   <div class="clear">&nbsp;</div>
		  </div>
	   </div>
	</wr:Frame>
[% if (useEmptyUnitMessage != "true") { %]
</c:if>
[% } else { %]
</c:when>
<c:otherwise>
	<wr:Frame>
		<div class="plain <wr:StyleClass/>">
			<div class="plain MultiDataUnit">
				<table>
				    <tr>
				      <td><bean:message key="[%printJSPTagValue(emptyUnitMessage)%]"/></td>
				    </tr>
				</table>
			</div>
		</div>
	</wr:Frame>
</c:otherwise>
</c:choose>
[% } %]